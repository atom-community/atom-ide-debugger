"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEBUG_SOURCES_URI = exports.UNKNOWN_SOURCE = exports.BreakpointEventReasons = exports.DEBUGGER_PANELS_DEFAULT_WIDTH_PX = exports.DEBUGGER_PANELS_DEFAULT_LOCATION = exports.DebuggerMode = exports.AnalyticsEvents = void 0;
const AnalyticsEvents = Object.freeze({
  ANDROID_DEBUGGER_SDK_SOURCES: "android-debugger-sdk-sources",
  DEBUGGER_BREAKPOINT_ADD: "debugger-breakpoint-add",
  DEBUGGER_BREAKPOINT_DELETE: "debugger-breakpoint-delete",
  DEBUGGER_BREAKPOINT_DELETE_ALL: "debugger-breakpoint-delete-all",
  DEBUGGER_BREAKPOINT_SINGLE_ADD: "debugger-breakpoint-single-add",
  DEBUGGER_BREAKPOINT_TOGGLE: "debugger-breakpoint-toggle",
  DEBUGGER_BREAKPOINT_TOGGLE_ENABLED: "debugger-breakpoint-toggle-enabled",
  DEBUGGER_BREAKPOINT_CONFIG_UI_SHOW: "debugger-breakpoint-condition-shown",
  DEBUGGER_BREAKPOINT_UPDATE_CONDITION: "debugger-breakpoint-update-condition",
  DEBUGGER_EDIT_VARIABLE: "debugger-edit-variable",
  DEBUGGER_MULTITARGET: "debugger-multitarget",
  DEBUGGER_START: "debugger-start",
  DEBUGGER_START_FAIL: "debugger-start-fail",
  DEBUGGER_STEP_CONTINUE: "debugger-step-continue",
  DEBUGGER_STEP_INTO: "debugger-step-into",
  DEBUGGER_STEP_OUT: "debugger-step-out",
  DEBUGGER_STEP_OVER: "debugger-step-over",
  DEBUGGER_STEP_BACK: "debugger-step-back",
  DEBUGGER_STEP_RUN_TO_LOCATION: "debugger-step-run-to-location",
  DEBUGGER_STEP_PAUSE: "debugger-step-pause",
  DEBUGGER_STOP: "debugger-stop",
  DEBUGGER_TERMINATE_THREAD: "debugger-terminate-thread",
  DEBUGGER_TOGGLE_ATTACH_DIALOG: "debugger-toggle-attach-dialog",
  DEBUGGER_TOGGLE_EXCEPTION_BREAKPOINT: "debugger-toggle-exception-breakpoint",
  DEBUGGER_TREE_OPENED: "debugger-tree-opened",
  DEBUGGER_WATCH_ADD_EXPRESSION: "debugger-watch-add-expression",
  DEBUGGER_WATCH_REMOVE_EXPRESSION: "debugger-watch-remove-expression",
  DEBUGGER_WATCH_UPDATE_EXPRESSION: "debugger-watch-update-expression",
  DEBUGGER_EDIT_BREAKPOINT_FROM_ICON: "debugger-edit-breakpoint-from-icon",
  DEBUGGER_DELETE_BREAKPOINT_FROM_ICON: "debugger-delete-breakpoint-from-icon"
});
exports.AnalyticsEvents = AnalyticsEvents;
const DebuggerMode = Object.freeze({
  STARTING: "starting",
  RUNNING: "running",
  PAUSED: "paused",
  STOPPED: "stopped",
  STOPPING: "stopping"
}) // This is to work around flow's missing support of enums.
;
exports.DebuggerMode = DebuggerMode;
DebuggerMode;
const DEBUGGER_PANELS_DEFAULT_LOCATION = "right";
exports.DEBUGGER_PANELS_DEFAULT_LOCATION = DEBUGGER_PANELS_DEFAULT_LOCATION;
const DEBUGGER_PANELS_DEFAULT_WIDTH_PX = 500;
exports.DEBUGGER_PANELS_DEFAULT_WIDTH_PX = DEBUGGER_PANELS_DEFAULT_WIDTH_PX;
const BreakpointEventReasons = Object.freeze({
  NEW: "new",
  CHANGED: "changed",
  REMOVED: "removed"
});
exports.BreakpointEventReasons = BreakpointEventReasons;
const UNKNOWN_SOURCE = "Unknown";
exports.UNKNOWN_SOURCE = UNKNOWN_SOURCE;
const DEBUG_SOURCES_URI = "atom://debug-sources";
exports.DEBUG_SOURCES_URI = DEBUG_SOURCES_URI;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnN0YW50cy5qcyJdLCJuYW1lcyI6WyJBbmFseXRpY3NFdmVudHMiLCJPYmplY3QiLCJmcmVlemUiLCJBTkRST0lEX0RFQlVHR0VSX1NES19TT1VSQ0VTIiwiREVCVUdHRVJfQlJFQUtQT0lOVF9BREQiLCJERUJVR0dFUl9CUkVBS1BPSU5UX0RFTEVURSIsIkRFQlVHR0VSX0JSRUFLUE9JTlRfREVMRVRFX0FMTCIsIkRFQlVHR0VSX0JSRUFLUE9JTlRfU0lOR0xFX0FERCIsIkRFQlVHR0VSX0JSRUFLUE9JTlRfVE9HR0xFIiwiREVCVUdHRVJfQlJFQUtQT0lOVF9UT0dHTEVfRU5BQkxFRCIsIkRFQlVHR0VSX0JSRUFLUE9JTlRfQ09ORklHX1VJX1NIT1ciLCJERUJVR0dFUl9CUkVBS1BPSU5UX1VQREFURV9DT05ESVRJT04iLCJERUJVR0dFUl9FRElUX1ZBUklBQkxFIiwiREVCVUdHRVJfTVVMVElUQVJHRVQiLCJERUJVR0dFUl9TVEFSVCIsIkRFQlVHR0VSX1NUQVJUX0ZBSUwiLCJERUJVR0dFUl9TVEVQX0NPTlRJTlVFIiwiREVCVUdHRVJfU1RFUF9JTlRPIiwiREVCVUdHRVJfU1RFUF9PVVQiLCJERUJVR0dFUl9TVEVQX09WRVIiLCJERUJVR0dFUl9TVEVQX0JBQ0siLCJERUJVR0dFUl9TVEVQX1JVTl9UT19MT0NBVElPTiIsIkRFQlVHR0VSX1NURVBfUEFVU0UiLCJERUJVR0dFUl9TVE9QIiwiREVCVUdHRVJfVEVSTUlOQVRFX1RIUkVBRCIsIkRFQlVHR0VSX1RPR0dMRV9BVFRBQ0hfRElBTE9HIiwiREVCVUdHRVJfVE9HR0xFX0VYQ0VQVElPTl9CUkVBS1BPSU5UIiwiREVCVUdHRVJfVFJFRV9PUEVORUQiLCJERUJVR0dFUl9XQVRDSF9BRERfRVhQUkVTU0lPTiIsIkRFQlVHR0VSX1dBVENIX1JFTU9WRV9FWFBSRVNTSU9OIiwiREVCVUdHRVJfV0FUQ0hfVVBEQVRFX0VYUFJFU1NJT04iLCJERUJVR0dFUl9FRElUX0JSRUFLUE9JTlRfRlJPTV9JQ09OIiwiREVCVUdHRVJfREVMRVRFX0JSRUFLUE9JTlRfRlJPTV9JQ09OIiwiRGVidWdnZXJNb2RlIiwiU1RBUlRJTkciLCJSVU5OSU5HIiwiUEFVU0VEIiwiU1RPUFBFRCIsIlNUT1BQSU5HIiwiREVCVUdHRVJfUEFORUxTX0RFRkFVTFRfTE9DQVRJT04iLCJERUJVR0dFUl9QQU5FTFNfREVGQVVMVF9XSURUSF9QWCIsIkJyZWFrcG9pbnRFdmVudFJlYXNvbnMiLCJORVciLCJDSEFOR0VEIiwiUkVNT1ZFRCIsIlVOS05PV05fU09VUkNFIiwiREVCVUdfU09VUkNFU19VUkkiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVPLE1BQU1BLGVBQWUsR0FBR0MsTUFBTSxDQUFDQyxNQUFQLENBQWM7QUFDM0NDLEVBQUFBLDRCQUE0QixFQUFFLDhCQURhO0FBRTNDQyxFQUFBQSx1QkFBdUIsRUFBRSx5QkFGa0I7QUFHM0NDLEVBQUFBLDBCQUEwQixFQUFFLDRCQUhlO0FBSTNDQyxFQUFBQSw4QkFBOEIsRUFBRSxnQ0FKVztBQUszQ0MsRUFBQUEsOEJBQThCLEVBQUUsZ0NBTFc7QUFNM0NDLEVBQUFBLDBCQUEwQixFQUFFLDRCQU5lO0FBTzNDQyxFQUFBQSxrQ0FBa0MsRUFBRSxvQ0FQTztBQVEzQ0MsRUFBQUEsa0NBQWtDLEVBQUUscUNBUk87QUFTM0NDLEVBQUFBLG9DQUFvQyxFQUFFLHNDQVRLO0FBVTNDQyxFQUFBQSxzQkFBc0IsRUFBRSx3QkFWbUI7QUFXM0NDLEVBQUFBLG9CQUFvQixFQUFFLHNCQVhxQjtBQVkzQ0MsRUFBQUEsY0FBYyxFQUFFLGdCQVoyQjtBQWEzQ0MsRUFBQUEsbUJBQW1CLEVBQUUscUJBYnNCO0FBYzNDQyxFQUFBQSxzQkFBc0IsRUFBRSx3QkFkbUI7QUFlM0NDLEVBQUFBLGtCQUFrQixFQUFFLG9CQWZ1QjtBQWdCM0NDLEVBQUFBLGlCQUFpQixFQUFFLG1CQWhCd0I7QUFpQjNDQyxFQUFBQSxrQkFBa0IsRUFBRSxvQkFqQnVCO0FBa0IzQ0MsRUFBQUEsa0JBQWtCLEVBQUUsb0JBbEJ1QjtBQW1CM0NDLEVBQUFBLDZCQUE2QixFQUFFLCtCQW5CWTtBQW9CM0NDLEVBQUFBLG1CQUFtQixFQUFFLHFCQXBCc0I7QUFxQjNDQyxFQUFBQSxhQUFhLEVBQUUsZUFyQjRCO0FBc0IzQ0MsRUFBQUEseUJBQXlCLEVBQUUsMkJBdEJnQjtBQXVCM0NDLEVBQUFBLDZCQUE2QixFQUFFLCtCQXZCWTtBQXdCM0NDLEVBQUFBLG9DQUFvQyxFQUFFLHNDQXhCSztBQXlCM0NDLEVBQUFBLG9CQUFvQixFQUFFLHNCQXpCcUI7QUEwQjNDQyxFQUFBQSw2QkFBNkIsRUFBRSwrQkExQlk7QUEyQjNDQyxFQUFBQSxnQ0FBZ0MsRUFBRSxrQ0EzQlM7QUE0QjNDQyxFQUFBQSxnQ0FBZ0MsRUFBRSxrQ0E1QlM7QUE2QjNDQyxFQUFBQSxrQ0FBa0MsRUFBRSxvQ0E3Qk87QUE4QjNDQyxFQUFBQSxvQ0FBb0MsRUFBRTtBQTlCSyxDQUFkLENBQXhCOztBQWlDQSxNQUFNQyxZQUFZLEdBQUdoQyxNQUFNLENBQUNDLE1BQVAsQ0FBYztBQUN4Q2dDLEVBQUFBLFFBQVEsRUFBRSxVQUQ4QjtBQUV4Q0MsRUFBQUEsT0FBTyxFQUFFLFNBRitCO0FBR3hDQyxFQUFBQSxNQUFNLEVBQUUsUUFIZ0M7QUFJeENDLEVBQUFBLE9BQU8sRUFBRSxTQUorQjtBQUt4Q0MsRUFBQUEsUUFBUSxFQUFFO0FBTDhCLENBQWQsQ0FBckIsQ0FRUDtBQVJPOztBQVNMTCxZQUFEO0FBRU0sTUFBTU0sZ0NBQWdDLEdBQUcsT0FBekM7O0FBQ0EsTUFBTUMsZ0NBQWdDLEdBQUcsR0FBekM7O0FBRUEsTUFBTUMsc0JBQXNCLEdBQUd4QyxNQUFNLENBQUNDLE1BQVAsQ0FBYztBQUNsRHdDLEVBQUFBLEdBQUcsRUFBRSxLQUQ2QztBQUVsREMsRUFBQUEsT0FBTyxFQUFFLFNBRnlDO0FBR2xEQyxFQUFBQSxPQUFPLEVBQUU7QUFIeUMsQ0FBZCxDQUEvQjs7QUFNQSxNQUFNQyxjQUFjLEdBQUcsU0FBdkI7O0FBQ0EsTUFBTUMsaUJBQWlCLEdBQUcsc0JBQTFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBEZWJ1Z2dlck1vZGVUeXBlIH0gZnJvbSBcIi4vdHlwZXNcIlxuXG5leHBvcnQgY29uc3QgQW5hbHl0aWNzRXZlbnRzID0gT2JqZWN0LmZyZWV6ZSh7XG4gIEFORFJPSURfREVCVUdHRVJfU0RLX1NPVVJDRVM6IFwiYW5kcm9pZC1kZWJ1Z2dlci1zZGstc291cmNlc1wiLFxuICBERUJVR0dFUl9CUkVBS1BPSU5UX0FERDogXCJkZWJ1Z2dlci1icmVha3BvaW50LWFkZFwiLFxuICBERUJVR0dFUl9CUkVBS1BPSU5UX0RFTEVURTogXCJkZWJ1Z2dlci1icmVha3BvaW50LWRlbGV0ZVwiLFxuICBERUJVR0dFUl9CUkVBS1BPSU5UX0RFTEVURV9BTEw6IFwiZGVidWdnZXItYnJlYWtwb2ludC1kZWxldGUtYWxsXCIsXG4gIERFQlVHR0VSX0JSRUFLUE9JTlRfU0lOR0xFX0FERDogXCJkZWJ1Z2dlci1icmVha3BvaW50LXNpbmdsZS1hZGRcIixcbiAgREVCVUdHRVJfQlJFQUtQT0lOVF9UT0dHTEU6IFwiZGVidWdnZXItYnJlYWtwb2ludC10b2dnbGVcIixcbiAgREVCVUdHRVJfQlJFQUtQT0lOVF9UT0dHTEVfRU5BQkxFRDogXCJkZWJ1Z2dlci1icmVha3BvaW50LXRvZ2dsZS1lbmFibGVkXCIsXG4gIERFQlVHR0VSX0JSRUFLUE9JTlRfQ09ORklHX1VJX1NIT1c6IFwiZGVidWdnZXItYnJlYWtwb2ludC1jb25kaXRpb24tc2hvd25cIixcbiAgREVCVUdHRVJfQlJFQUtQT0lOVF9VUERBVEVfQ09ORElUSU9OOiBcImRlYnVnZ2VyLWJyZWFrcG9pbnQtdXBkYXRlLWNvbmRpdGlvblwiLFxuICBERUJVR0dFUl9FRElUX1ZBUklBQkxFOiBcImRlYnVnZ2VyLWVkaXQtdmFyaWFibGVcIixcbiAgREVCVUdHRVJfTVVMVElUQVJHRVQ6IFwiZGVidWdnZXItbXVsdGl0YXJnZXRcIixcbiAgREVCVUdHRVJfU1RBUlQ6IFwiZGVidWdnZXItc3RhcnRcIixcbiAgREVCVUdHRVJfU1RBUlRfRkFJTDogXCJkZWJ1Z2dlci1zdGFydC1mYWlsXCIsXG4gIERFQlVHR0VSX1NURVBfQ09OVElOVUU6IFwiZGVidWdnZXItc3RlcC1jb250aW51ZVwiLFxuICBERUJVR0dFUl9TVEVQX0lOVE86IFwiZGVidWdnZXItc3RlcC1pbnRvXCIsXG4gIERFQlVHR0VSX1NURVBfT1VUOiBcImRlYnVnZ2VyLXN0ZXAtb3V0XCIsXG4gIERFQlVHR0VSX1NURVBfT1ZFUjogXCJkZWJ1Z2dlci1zdGVwLW92ZXJcIixcbiAgREVCVUdHRVJfU1RFUF9CQUNLOiBcImRlYnVnZ2VyLXN0ZXAtYmFja1wiLFxuICBERUJVR0dFUl9TVEVQX1JVTl9UT19MT0NBVElPTjogXCJkZWJ1Z2dlci1zdGVwLXJ1bi10by1sb2NhdGlvblwiLFxuICBERUJVR0dFUl9TVEVQX1BBVVNFOiBcImRlYnVnZ2VyLXN0ZXAtcGF1c2VcIixcbiAgREVCVUdHRVJfU1RPUDogXCJkZWJ1Z2dlci1zdG9wXCIsXG4gIERFQlVHR0VSX1RFUk1JTkFURV9USFJFQUQ6IFwiZGVidWdnZXItdGVybWluYXRlLXRocmVhZFwiLFxuICBERUJVR0dFUl9UT0dHTEVfQVRUQUNIX0RJQUxPRzogXCJkZWJ1Z2dlci10b2dnbGUtYXR0YWNoLWRpYWxvZ1wiLFxuICBERUJVR0dFUl9UT0dHTEVfRVhDRVBUSU9OX0JSRUFLUE9JTlQ6IFwiZGVidWdnZXItdG9nZ2xlLWV4Y2VwdGlvbi1icmVha3BvaW50XCIsXG4gIERFQlVHR0VSX1RSRUVfT1BFTkVEOiBcImRlYnVnZ2VyLXRyZWUtb3BlbmVkXCIsXG4gIERFQlVHR0VSX1dBVENIX0FERF9FWFBSRVNTSU9OOiBcImRlYnVnZ2VyLXdhdGNoLWFkZC1leHByZXNzaW9uXCIsXG4gIERFQlVHR0VSX1dBVENIX1JFTU9WRV9FWFBSRVNTSU9OOiBcImRlYnVnZ2VyLXdhdGNoLXJlbW92ZS1leHByZXNzaW9uXCIsXG4gIERFQlVHR0VSX1dBVENIX1VQREFURV9FWFBSRVNTSU9OOiBcImRlYnVnZ2VyLXdhdGNoLXVwZGF0ZS1leHByZXNzaW9uXCIsXG4gIERFQlVHR0VSX0VESVRfQlJFQUtQT0lOVF9GUk9NX0lDT046IFwiZGVidWdnZXItZWRpdC1icmVha3BvaW50LWZyb20taWNvblwiLFxuICBERUJVR0dFUl9ERUxFVEVfQlJFQUtQT0lOVF9GUk9NX0lDT046IFwiZGVidWdnZXItZGVsZXRlLWJyZWFrcG9pbnQtZnJvbS1pY29uXCIsXG59KVxuXG5leHBvcnQgY29uc3QgRGVidWdnZXJNb2RlID0gT2JqZWN0LmZyZWV6ZSh7XG4gIFNUQVJUSU5HOiBcInN0YXJ0aW5nXCIsXG4gIFJVTk5JTkc6IFwicnVubmluZ1wiLFxuICBQQVVTRUQ6IFwicGF1c2VkXCIsXG4gIFNUT1BQRUQ6IFwic3RvcHBlZFwiLFxuICBTVE9QUElORzogXCJzdG9wcGluZ1wiLFxufSlcblxuLy8gVGhpcyBpcyB0byB3b3JrIGFyb3VuZCBmbG93J3MgbWlzc2luZyBzdXBwb3J0IG9mIGVudW1zLlxuOyhEZWJ1Z2dlck1vZGU6IHsgW2tleTogc3RyaW5nXTogRGVidWdnZXJNb2RlVHlwZSB9KVxuXG5leHBvcnQgY29uc3QgREVCVUdHRVJfUEFORUxTX0RFRkFVTFRfTE9DQVRJT04gPSBcInJpZ2h0XCJcbmV4cG9ydCBjb25zdCBERUJVR0dFUl9QQU5FTFNfREVGQVVMVF9XSURUSF9QWCA9IDUwMFxuXG5leHBvcnQgY29uc3QgQnJlYWtwb2ludEV2ZW50UmVhc29ucyA9IE9iamVjdC5mcmVlemUoe1xuICBORVc6IFwibmV3XCIsXG4gIENIQU5HRUQ6IFwiY2hhbmdlZFwiLFxuICBSRU1PVkVEOiBcInJlbW92ZWRcIixcbn0pXG5cbmV4cG9ydCBjb25zdCBVTktOT1dOX1NPVVJDRSA9IFwiVW5rbm93blwiXG5leHBvcnQgY29uc3QgREVCVUdfU09VUkNFU19VUkkgPSBcImF0b206Ly9kZWJ1Zy1zb3VyY2VzXCJcbiJdfQ==